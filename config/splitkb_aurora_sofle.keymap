/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <35>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        tilde_caps: tilde_caps {
            compatible = "zmk,behavior-mod-morph";
            label = "TILDE_CAPS";
            #binding-cells = <0>;
            bindings = <&kp TILDE>, <&caps_word>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_brightness: rgb_brightness {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_BRIGHTNESS";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_BRI>;
        };

        rgb_hue: rgb_hue {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_HUE";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };

        rgb_saturation: rgb_saturation {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_SATURATION";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAD>, <&rgb_ug RGB_SAI>;
        };

        lh_pht: lh_pht {
            compatible = "zmk,behavior-hold-tap";
            label = "Left hand hold tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-unless-interrupted";
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <55 43 56 44 30 6 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 45 46 47 48 49 57 58 59 18>;
        };

        rh_pht: rh_pht {
            compatible = "zmk,behavior-hold-tap";
            label = "Right hand hold tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
            retro-tap;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 50 51 52 53 3 54 42>;
        };

        br_pht: br_pht {
            compatible = "zmk,behavior-hold-tap";
            label = "Bottom row hold tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <500>;
            flavor = "tap-unless-interrupted";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        querty {
            bindings = <
&kp ESCAPE        &kp N1  &kp N2                  &kp N3              &kp N4              &kp N5                                                                   &kp N6  &kp N7               &kp N8               &kp N9                   &kp N0    &tilde_caps
&kp TAB           &kp Q   &lh_pht LEFT_CONTROL W  &lh_pht LEFT_ALT E  &lh_pht LEFT_WIN R  &kp T                                                                    &kp Y   &rh_pht RIGHT_WIN U  &rh_pht RIGHT_ALT I  &rh_pht RIGHT_CONTROL O  &kp P     &bspc_del
&caps_word        &kp A   &kp S                   &kp D               &kp F               &kp G                                                                    &kp H   &kp J                &kp K                &kp L                    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X                   &kp C               &kp V               &kp B           &kp C_MUTE                  &none                        &kp N   &kp M                &kp COMMA            &kp DOT                  &kp FSLH  &mt LS(LA(LCTRL)) BACKSLASH
                          &none                   &rgb_ug RGB_TOG     &out OUT_TOG        &lt 2 LEFT_WIN  &br_pht LEFT_SHIFT SPACE    &br_pht RIGHT_CONTROL ENTER  &mo 3   &none                &none                &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        Focal {
            bindings = <
&trans  &trans  &trans                  &trans              &trans              &trans                    &trans   &trans               &trans               &trans                   &trans     &trans
&trans  &kp V   &lh_pht LEFT_CONTROL L  &lh_pht LEFT_ALT H  &lh_pht LEFT_WIN G  &kp K                     &kp Q    &rh_pht RIGHT_WIN F  &rh_pht RIGHT_ALT O  &rh_pht RIGHT_CONTROL U  &kp J      &trans
&trans  &kp S   &kp R                   &kp N               &kp T               &kp B                     &kp Y    &kp C                &kp A                &kp E                    &kp I      &kp SLASH
&trans  &kp Z   &kp X                   &kp M               &kp D               &kp P   &trans    &trans  &kp SQT  &kp W                &kp DOT              &kp SEMI                 &kp COMMA  &trans
                &trans                  &trans              &trans              &trans  &trans    &trans  &trans   &trans               &trans               &trans
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        lower {
            bindings = <
&kp F1     &kp F2           &kp F3         &kp F4        &kp F5                &kp F6                                   &kp F7             &kp F8           &kp F9           &kp F10     &kp F11       &kp F12
&kp GRAVE  &kp EXCLAMATION  &kp AT         &kp HASH      &kp LEFT_BRACE        &kp RIGHT_BRACE                          &kp KP_NUMBER_7    &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS   &kp SLASH     &kp BACKSPACE
&trans     &kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                    &kp KP_NUMBER_4    &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS    &kp ASTERISK  &kp DELETE
&trans     &none            &kp DOLLAR     &kp PERCENT   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans    &trans  &kp KP_NUMBER_1    &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD  &kp EQUAL     &trans
                            &tog 1         &trans        &studio_unlock        &trans                 &trans    &trans  &lt 3 KP_NUMBER_0  &trans           &trans           &trans
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp C_VOLUME_DOWN C_VOL_UP>;
        };

        upper {
            bindings = <
&bt BT_CLR    &bt BT_NXT    &rgb_ug RGB_EFF  &trans             &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                    &rgb_ug RGB_COLOR_HSB(38,81,46)  &rgb_ug RGB_COLOR_HSB(166,80,47)  &rgb_ug RGB_COLOR_HSB(233,82,48)  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &bt BT_CLR_ALL
&bt BT_SEL 0  &bt BT_SEL 1  &kp SYSREQ       &kp K_APPLICATION  &trans           &trans                             &kp PG_UP                        &kp HOME                          &kp UP                            &kp END          &trans           &trans
&bt BT_SEL 2  &bt BT_SEL 3  &none            &none              &none            &trans                             &kp PG_DN                        &kp LEFT                          &kp DOWN                          &kp RIGHT        &trans           &trans
&bt BT_SEL 4  &kp K_UNDO    &kp K_CUT        &kp K_COPY         &kp K_PASTE      &trans           &trans    &trans  &trans                           &kp LS(LC(TAB))                   &trans                            &kp LC(TAB)      &trans           &trans
                            &trans           &trans             &trans           &trans           &trans    &trans  &trans                           &trans                            &trans                            &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&rgb_hue>;
        };

        layer_4 {
            bindings = <
&trans  &trans          &trans             &trans        &trans      &trans                    &trans      &trans     &trans     &trans     &trans     &trans
&trans  &trans          &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp K_MUTE  &trans                    &trans      &trans     &trans     &trans     &trans     &trans
&trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_STOP    &kp C_NEXT  &trans                    &kp RA(N5)  &kp RA(Q)  &kp RA(P)  &kp RA(Y)  &kp RA(S)  &trans
&trans  &trans          &trans             &trans        &trans      &trans  &trans    &trans  &trans      &trans     &trans     &trans     &trans     &trans
                        &trans             &trans        &trans      &trans  &trans    &trans  &trans      &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&rgb_saturation>;
        };
    };
};
